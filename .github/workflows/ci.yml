name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install Rust toolchain
      uses: dtolnay/rust-toolchain@stable
      with:
        toolchain: "1.89.0"
        components: rustfmt, clippy
    
    - name: Cache cargo registry
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-
    
    - name: Install cargo-audit
      run: cargo install cargo-audit

    - name: Install ALSA deps
      run: |
        sudo apt-get update
        sudo apt-get install -y pkg-config libasound2-dev

    - name: Run tests
      run: |
        echo '+cargo test'
        cargo test
    
    - name: Run clippy
      run: |
        echo '+cargo clippy -- -D warnings'
        cargo clippy -- -D warnings
    
    - name: Check formatting
      run: |
        echo '+cargo fmt -- --check'
        cargo fmt -- --check
    
    - name: Run security audit
      run: |
        echo '+cargo audit'
        cargo audit

  e2e:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install Rust toolchain
      uses: dtolnay/rust-toolchain@stable
      with:
        toolchain: "1.89.0"
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version-file: ./.node-version
        cache: 'npm'
    
    - name: Cache cargo registry
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-
    
    - name: Install npm dependencies
      run: npm ci

    - name: Install ALSA deps
      run: |
        sudo apt-get update
        sudo apt-get install -y pkg-config libasound2-dev

    - name: Build termigroove (release)
      run: cargo build --release
    
    - name: Run E2E tests
      run: npm run test:e2e:ci
    
    - name: Upload E2E traces on failure
      uses: actions/upload-artifact@v4
      if: failure()
      with:
        name: tui-traces
        path: tui-traces/
        retention-days: 30
